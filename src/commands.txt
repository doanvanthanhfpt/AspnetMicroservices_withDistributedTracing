docker pull mongo
docker run -d -p 27017:27017 --name shopping-mongo mongo
docker logs -f shopping-mongo

docker exec -it shopping-mongo /bin/bash
ls
mongo
show dbs
use CatalogDb
db.createCollection('Products')
db.Products.insertMany([{ 'Name':'Asus Laptop','Category':'Computers', 'Summary':'Summary', 'Description':'Description', 'ImageFile':'ImageFile', 'Price':54.93 }, { 'Name':'HP Laptop','Category':'Computers', 'Summary':'Summary', 'Description':'Description', 'ImageFile':'ImageFile', 'Price':88.93 } ])
db.Products.find({}).pretty()
db.Products.remove({})
show databases
show collections

Install-Package MongoDB.Driver
Update-Package -ProjectName Catalog.API

docker stop 18f9 -- stop container
docker rm 18f9 -- remove container
docker rmi 18f9 -- remove image
docker ps
docker images

docker-compose -f .\docker-compose.yml -f .\docker-compose.override.yml up -d
docker-compose -f .\docker-compose.yml -f .\docker-compose.override.yml down

docker ps -aq
docker stop $(docker ps -aq)
docker rm $(docker ps -aq)
docker rmi $(docker images -aq)
docker system prune

docker run -d -p 3000:3000 mongoclient/mongoclient

docker pull redis
docker run -d -p 6379:6379 --name aspnetrun-redis redis
docker logs -f aspnetrun-redis

docker exec -it aspnetrun-redis /bin/bash
redis-cli
ping
set key value
get key

Install-Package Microsoft.Extensions.Caching.StackExchangeRedis
Update-Package -ProjectName Basket.API

Stop the container(s) using the following command:
docker-compose down

Delete all containers using the following command:
docker rm -f $(docker ps -a -q)

Delete all volumes using the following command:
docker volume rm $(docker volume ls -q)

Restart the containers using the following command:
docker-compose up -d


